### ！此文件涉及原版修改
# 分部
can_build_branch_offices = {
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_MEGACORP
		OR = {
			has_authority = auth_corporate
			has_civic = civic_galactic_sovereign_megacorp
			# BA
			has_authority = auth_kivotos
		}
	}
}

can_support_branch_offices = {
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_FALLEN_EMPIRES
		NOR = {
			is_country_type = fallen_empire
			is_country_type = awakened_fallen_empire
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_ON_MEGACORP_PLANET
		NOR = {
			has_authority = auth_corporate
			has_civic = civic_galactic_sovereign_megacorp
			#BA
			has_authority = auth_kivotos
		}
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_REGULAR_EMPIRE
		is_gestalt = no
	}
	custom_tooltip = {
		fail_text = BRANCH_OFFICE_NOT_ADVANCED_PRE_FTL
		if = {
			limit = {
				is_primitive = yes
				is_gestalt = no
			}
			OR = {
				has_pre_ftl_age = atomic_age
				has_pre_ftl_age = early_space_age
			}
		}
	}
}

is_criminal_syndicate_rule = {
	OR = {
		#Vanilla
		AND = {
			OR = {
				has_authority = auth_corporate
				has_valid_civic = civic_galactic_sovereign_megacorp
			}
			has_valid_civic = civic_criminal_heritage
		}
		#BA
		has_ascension_perk = ap_BA_new_frontier
	}
}

# 全图视野
has_full_sensor_range = {
	OR = {
		has_megastructure = spy_orb_4
		has_megastructure = spy_orb_restored
		# BA
		has_modifier = modifier_BA_Veritas_4
	}
}

# 星系跃迁限制
can_enter_system_by_jump = {
	custom_tooltip = {
		#		success_text = "debug: can jump"
		fail_text = cannot_jump_to_system
		# Sealed system
		OR = {
			NOT = {
				has_star_flag = sealed_system
			}
			AND = {
				root = {
					has_country_flag = entered_sealed_system
				}
				has_star_flag = sealed_system
			}
		}
		# Special system
		NOR = {
			#Vanilla
			has_star_flag = lcluster
			has_star_flag = formless_system
			#BA
			has_star_flag = BA_FE_SYS
		}
	}
}

# 轨道轰炸
#Root = fleet, potential attacker
#From = planet, potential target
can_orbital_bombard = {
	exists = FROM.OWNER
	NOT = {
		any_controlled_ship = {
			is_ship_size = colossus
		}
	}
	OR = {
		AND = {
			ROOT.CONTROLLER = {
				NOT = {
					has_communications = FROM.OWNER
				}
			}
			FROM.OWNER = {
				NOT = {
					is_country_type = primitive
				}
			}
		}
		AND = {
			ROOT.CONTROLLER = {
				NOR = {
					has_policy_flag = interference_not_allowed
					has_policy_flag = interference_subtle
				}
			}
			FROM.OWNER = {
				is_country_type = primitive
			}
		}
		ROOT.CONTROLLER = {
			is_at_war_with = FROM.CONTROLLER
		}
		FROM = {
			is_planet_class = pc_infested
		}
		FROM.CONTROLLER = {
			OR = {
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				AND = {
					is_country_type = awakened_marauders
					ROOT.CONTROLLER = {
						is_hostile = prev
					}
				}
			}
		}
		ROOT.CONTROLLER = {
			OR = {
				is_country_type = extradimensional
				is_country_type = extradimensional_2
				is_country_type = extradimensional_3
				is_country_type = swarm
				is_country_type = ai_empire
				is_country_type = cybrex_empire
				is_country_type = dormant_marauders
				is_country_type = marauder_raiders
				is_country_type = ruined_marauders
				is_country_type = debt_collectors
				is_country_type = gray_goo
				is_country_type = vol
				AND = {
					OR = {
						is_country_type = awakened_marauders
						is_country_type = formless
					}
					FROM.CONTROLLER = {
						is_hostile = prev
					}
				}
				#	BA
				is_country_type = Aris_mid
			}
		}
		AND = {
			from.controller = {
				is_country_type = faction
				NOT = {
					is_same_value = ROOT.CONTROLLER
				}
			}
			from.owner = {
				is_same_value = ROOT.CONTROLLER
			}
		}
	}
}

# 攻击舰队
#Root = country, attacker
#This = country, target
#This rule is a condition for taking hostile actions towards neutral targets. Such as landing troops or attacking their fleets
can_take_hostile_actions = {
	if = {
		limit = {
			ROOT = {
				NOT = { has_policy_flag = first_contact_attack_allowed }
			}
			NOT = {
				is_hostile = ROOT
				has_communications = ROOT
			}
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_FIRST_CONTACT_PROTOCOL"
			always = no
		}
	}
	else_if = {
		limit = {
			has_country_flag = fotd_seperatist_country@ROOT
			ROOT = {
				has_origin = origin_fear_of_the_dark
			}
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_FOTD"
			always = no
		}
	}
	else_if = {
		limit = {
			AND = {
				NOT = { has_country_flag = hostile_to_nomads }
				ROOT = {
					is_country_type = nomad
				}
			}
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_FIRST_CONTACT_PROTOCOL"
			always = no
		}
	}
	else_if = {
		#attacking primitives with non-interference
		limit = {
			ROOT = {
				is_country_type = default
				NOT = {
					has_policy_flag = interference_aggressive
				}
			}
			is_primitive = yes
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_NATIVE_INTERFERENCE"
			always = no
		}
	}
	else_if = {
		limit = {
			is_primitive = yes
			ROOT = { is_country_type = default }
			capital_scope = {
				root = {
					NOT = {
						any_planet_within_border = {
							is_same_value = prevprev
						}
					}
				}
			}
		}
		custom_tooltip = {
			text = ""
			always = no
		}
	}
	else_if = {
		limit = {
			ROOT = { any_agreement = { agreement_preset = preset_satrapy } }
			is_country_type = faction
			root = {
				any_owned_planet = {
					exists = controller
					controller = {
						is_same_value = prevprevprev
					}
				}
			}
		}
		custom_tooltip = {
			text = ""
			always = yes
		}
	}
	else_if = {
		limit = {
			exists = overlord
			ROOT = { any_agreement = { agreement_preset = preset_satrapy } }
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_SATRAPY"
			always = no
		}
	}
	else_if = {
		limit = {
			exists = overlord
			overlord = { is_same_value = root }
			ROOT = { any_agreement = { agreement_preset = preset_satrapy } }
		}
		custom_tooltip = {
			text = "CAN_TAKE_HOSTILE_ACTION_OVERLORD"
			always = no
		}
	}
	# BA
	else_if = {
		limit = {
			from = {
				has_country_flag = BA_Precursor_contactor
			}
		}
		always = no
	}
	else = {
		always = yes
	}
}
